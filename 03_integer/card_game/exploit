#!/usr/bin/env python
from __future__ import print_function

import pwn

pwn.context.terminal = "tmux splitw -h".split()
pwn.context.arch="amd64"
exe = pwn.context.binary = pwn.ELF('main.elf')
# libc = pwn.ELF("/lib/x86_64-linux-gnu/libc.so.6")

r = pwn.process("./main.elf")

r.recvuntil("Round")
r.recvline()
print(r.recvline())
print(r.recvline())
print(r.recvline())
r.sendline("-2147483648")
r.sendline("1")

def try_round():
  r.recvuntil("Round")
  r.recvline()
  first = int(r.recvline().split("=")[1].strip())
  second = int(r.recvline().split("=")[1].strip())
  third = int(r.recvline().split("=")[1].strip())
  print("%d %d %d" %(first, second, third))
  nums = [first, second, third]
  if (first and second) or (second and third) or (third and first):
    s = first ^ second ^ third;
    for i in range(0, len(nums)):
      if nums[i] > (nums[i] ^ s):
        r.sendline(str(i))
        r.sendline(str(nums[i] - (nums[i] ^ s)))
        return None
    print("WARNING: something went wrong")
  else:
    for i in range(0, len(nums)):
      if nums[i]:
        r.sendline(str(i))
        r.sendline(str(nums[i]))
        r.recvuntil("You won?! But that's impossible!\n")
        return r.recv()
    print("WARNING2: something went wrong")
    return ""

flag = ""
while True:
  flag = try_round()
  if flag != None:
    break

print(flag)
r.close()

f = open("./solution.txt", "w")
f.write(flag)
f.close()

